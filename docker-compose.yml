x-python-tmlp:
  &python-tmlp
  image: ruskotwo/emotional-analyzer/python:latest
  environment:
    - TF_ENABLE_ONEDNN_OPTS=0
  env_file:
    - ./config/.env
  networks:
    - emotional-analyzer

services:
  golang:
    image: ruskotwo/emotional-analyzer/golang:latest
    restart: always
    env_file:
      - ./config/.env
    depends_on:
      rabbitmq:
        condition: service_healthy
    ports:
      - "3000:3000"
    networks:
      - emotional-analyzer

  python-trainer:
    <<: *python-tmlp
    restart: on-failure
    entrypoint:
      - "python3"
      - "ai/learn.py"
    volumes:
      - .:/var/app
    depends_on:
      rabbitmq:
        condition: service_healthy

  python-workers:
    <<: *python-tmlp
    restart: always
    entrypoint:
      - "supervisord"
      - "-c"
      - "/etc/supervisor/supervisord.conf"
      - "-n"
    volumes:
      - .:/var/app
      - ./ai/supervisor:/etc/supervisor/conf.d
    depends_on:
      rabbitmq:
        condition: service_healthy
      python-trainer:
        condition: service_completed_successfully

  rabbitmq:
    image: rabbitmq:3.10.7-management
    hostname: rabbitmq
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit disk_free_limit 2147483648
    volumes:
      - ./docker/rabbitmq:/var/lib/rabbitmq
    ports:
      - "15672:15672"
    networks:
      - emotional-analyzer
    healthcheck:
      test: "rabbitmq-diagnostics -q ping"
      interval: 1s
      timeout: 1s
      retries: 5

networks:
  default:
    external: true
    name: emotional-analyzer
  emotional-analyzer:
    name: emotional-analyzer